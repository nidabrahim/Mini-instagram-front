{"ast":null,"code":"import _classCallCheck from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/providers/postProvider.jsx\";\nimport React, { Component } from 'react';\nimport API from './../api';\nexport var PostContext = React.createContext();\nexport var PostConsumer = PostContext.Consumer;\n\nvar PostProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostProvider, _Component);\n\n  function PostProvider(props) {\n    var _this;\n\n    _classCallCheck(this, PostProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostProvider).call(this, props));\n\n    _this.updateLike = function (post) {\n      var access_token = localStorage.getItem(\"token\");\n      var config = {\n        headers: {\n          Authorization: access_token,\n          'Content-Type': 'application/json'\n        }\n      };\n      var upost = {\n        likes: post.likes + 1\n      };\n      API.put('post/' + post._id + '/likes/update', upost, config).then(function (res) {\n        _this.setState({\n          post: res.data.post\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.addComment = function (comment) {\n      var access_token = localStorage.getItem(\"token\");\n      var config = {\n        headers: {\n          Authorization: access_token,\n          'Content-Type': 'application/json'\n        } // const comment = {\n        //     body: this.state.body,\n        //     author: this.state.author\n        // };\n\n      };\n      API.post('post/' + _this.state.post._id + '/comments/add', comment, config).then(function (res) {\n        _this.setState({\n          post: res.data.post\n        });\n\n        console.log(res.data.post);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.state = {\n      post: _this.props.post,\n      updateLike: _this.updateLike,\n      addComment: _this.addComment\n    };\n    return _this;\n  }\n\n  _createClass(PostProvider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// const access_token = localStorage.getItem(\"token\");\n      // const config = {\n      //     headers: {\n      //     Authorization: access_token,\n      //     'Content-Type': 'application/json'\n      //     }\n      // }\n      // API.get('post/'+this.state.post._id, config)\n      // .then(res => {\n      //     this.setState({ post: res.data.post });\n      // })\n      // .catch((error) => {\n      //     console.log(error);\n      // })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PostContext.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return PostProvider;\n}(Component);\n\nexport default PostProvider;","map":{"version":3,"sources":["/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/providers/postProvider.jsx"],"names":["React","Component","API","PostContext","createContext","PostConsumer","Consumer","PostProvider","props","updateLike","post","access_token","localStorage","getItem","config","headers","Authorization","upost","likes","put","_id","then","res","setState","data","catch","error","console","log","addComment","comment","state","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAO,IAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEP,OAAO,IAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;;IAEDC,Y;;;;;AAEF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UA4BnBC,UA5BmB,GA4BN,UAAAC,IAAI,EAAI;AACjB,UAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,UAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACTC,UAAAA,aAAa,EAAEL,YADN;AAET,0BAAgB;AAFP;AADE,OAAf;AAMA,UAAMM,KAAK,GAAG;AACVC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAAL,GAAa;AADV,OAAd;AAGAhB,MAAAA,GAAG,CAACiB,GAAJ,CAAQ,UAAQT,IAAI,CAACU,GAAb,GAAiB,eAAzB,EAA0CH,KAA1C,EAAiDH,MAAjD,EACCO,IADD,CACM,UAAAC,GAAG,EAAI;AACT,cAAKC,QAAL,CAAc;AAAEb,UAAAA,IAAI,EAAEY,GAAG,CAACE,IAAJ,CAASd;AAAjB,SAAd;AACH,OAHD,EAICe,KAJD,CAIO,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAND;AAOH,KA9CkB;;AAAA,UAgDnBG,UAhDmB,GAgDN,UAAAC,OAAO,EAAI;AACpB,UAAMnB,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,UAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEL,YADR;AAEP,0BAAgB;AAFT,SADI,CAMf;AACA;AACA;AACA;;AATe,OAAf;AAUAT,MAAAA,GAAG,CAACQ,IAAJ,CAAS,UAAQ,MAAKqB,KAAL,CAAWrB,IAAX,CAAgBU,GAAxB,GAA4B,eAArC,EAAsDU,OAAtD,EAA+DhB,MAA/D,EACGO,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,cAAKC,QAAL,CAAc;AAAEb,UAAAA,IAAI,EAAEY,GAAG,CAACE,IAAJ,CAASd;AAAjB,SAAd;;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACE,IAAJ,CAASd,IAArB;AACH,OAJD,EAKCe,KALD,CAKO,UAACC,KAAD,EAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPD;AAQH,KApEkB;;AAGf,UAAKK,KAAL,GAAa;AACTrB,MAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE,IADR;AAETD,MAAAA,UAAU,EAAE,MAAKA,UAFR;AAGToB,MAAAA,UAAU,EAAE,MAAKA;AAHR,KAAb;AAHe;AAQlB;;;;wCAEmB,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;;6BA6CS;AACN,aACA,oBAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE,KAAKE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKvB,KAAL,CAAWwB,QADhB,CADA;AAKH;;;;EA/EsB/B,S;;AAmF3B,eAAeM,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport API from './../api';\n\nexport const PostContext = React.createContext()\n\nexport const PostConsumer = PostContext.Consumer\n\nclass PostProvider extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            post: this.props.post,\n            updateLike: this.updateLike,\n            addComment: this.addComment\n        }\n    }\n\n    componentDidMount() {\n        // const access_token = localStorage.getItem(\"token\");\n        // const config = {\n        //     headers: {\n        //     Authorization: access_token,\n        //     'Content-Type': 'application/json'\n        //     }\n        // }\n        // API.get('post/'+this.state.post._id, config)\n        // .then(res => {\n        //     this.setState({ post: res.data.post });\n        // })\n        // .catch((error) => {\n        //     console.log(error);\n        // })\n\n    }\n\n    updateLike = post => {\n        const access_token = localStorage.getItem(\"token\");\n        const config = {\n            headers: {\n            Authorization: access_token,\n            'Content-Type': 'application/json'\n            }\n        }\n        const upost = {\n            likes: post.likes + 1\n        };\n        API.put('post/'+post._id+'/likes/update', upost, config)\n        .then(res => {\n            this.setState({ post: res.data.post });\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    };\n\n    addComment = comment => {\n        const access_token = localStorage.getItem(\"token\");\n        const config = {\n          headers: {\n            Authorization: access_token,\n            'Content-Type': 'application/json'\n          }\n        }\n        // const comment = {\n        //     body: this.state.body,\n        //     author: this.state.author\n        // };\n        API.post('post/'+this.state.post._id+'/comments/add', comment, config)\n          .then(res => {\n            this.setState({ post: res.data.post });\n            console.log(res.data.post);\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    };\n\n\n    render () {\n        return (\n        <PostContext.Provider value={this.state}>\n            {this.props.children}\n        </PostContext.Provider>\n        )\n    }\n}\n\n\nexport default PostProvider"]},"metadata":{},"sourceType":"module"}