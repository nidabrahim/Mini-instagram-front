{"ast":null,"code":"import _classCallCheck from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/userForm.jsx\";\nimport React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\nimport API from '../api';\nimport { UserConsumer, UserContext } from './../providers/userProvider';\nimport 'react-images-uploader/styles.css';\nimport 'react-images-uploader/font.css';\n\nvar UserForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserForm, _React$Component);\n\n  function UserForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: _this.props.user.name,\n      secondname: _this.props.user.secondname,\n      pseudo: _this.props.user.pseudo,\n      email: _this.props.user.email,\n      description: _this.props.user.description,\n      user: _this.props.user\n    };\n\n    _this.handleChange = function (event) {\n      var target = event.target;\n\n      if (target.name === 'name') {\n        _this.setState({\n          name: event.target.value\n        });\n      } else if (target.name === 'secondname') {\n        _this.setState({\n          secondname: event.target.value\n        });\n      } else if (target.name === 'pseudo') {\n        _this.setState({\n          pseudo: event.target.value\n        });\n      } else if (target.name === 'email') {\n        _this.setState({\n          email: event.target.value\n        });\n      } else if (target.name === 'description') {\n        _this.setState({\n          description: event.target.value\n        });\n      }\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var access_token = localStorage.getItem(\"token\");\n      var user = _this.state.user;\n      var config = {\n        headers: {\n          Authorization: access_token,\n          'Content-Type': 'application/json'\n        }\n      };\n      var newUser = {\n        name: _this.state.name,\n        secondname: _this.state.secondname,\n        pseudo: _this.state.pseudo,\n        email: _this.state.email,\n        description: _this.state.description\n      };\n      API.post('user/' + user._id + '/update', newUser, config).then(function (result) {\n        _this.props.onHide();\n\n        console.log(result.data);\n        var user = result.data.user;\n        _this.props.au;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserForm, [{\n    key: \"getValidationState\",\n    value: function getValidationState() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"First name\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.name,\n        placeholder: \"Enter name\",\n        name: \"name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Second name\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.secondname,\n        placeholder: \"Enter second name\",\n        name: \"secondname\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Pseudo\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.pseudo,\n        placeholder: \"Enter pseudo\",\n        name: \"pseudo\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.email,\n        placeholder: \"Enter email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formControlsTextarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        value: this.state.description,\n        placeholder: \"Enter description\",\n        name: \"description\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"submitButton btn btn-outline btn-xl js-scroll-trigger\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Edit profile\")));\n    }\n  }]);\n\n  return UserForm;\n}(React.Component);\n\nvar ConnectedUserForm = function ConnectedUserForm(props) {\n  return React.createElement(UserConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, function (_ref) {\n    var user = _ref.user;\n    return React.createElement(UserForm, Object.assign({}, props, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default ConnectedUserForm;","map":{"version":3,"sources":["/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/userForm.jsx"],"names":["React","Component","FormGroup","ControlLabel","FormControl","Button","API","UserConsumer","UserContext","UserForm","state","name","props","user","secondname","pseudo","email","description","handleChange","event","target","setState","value","handleSubmit","preventDefault","access_token","localStorage","getItem","config","headers","Authorization","newUser","post","_id","then","result","onHide","console","log","data","au","catch","error","getValidationState","ConnectedUserForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\nimport API from '../api';\nimport { UserConsumer, UserContext } from './../providers/userProvider'\nimport 'react-images-uploader/styles.css';\nimport 'react-images-uploader/font.css';\n\nclass UserForm extends React.Component {\n\n  state = {\n    name: this.props.user.name,\n    secondname: this.props.user.secondname,\n    pseudo: this.props.user.pseudo,\n    email: this.props.user.email,\n    description: this.props.user.description,\n    user: this.props.user\n  }\n\n  getValidationState(){ }\n\n  handleChange = event => {\n   \n    const target = event.target;\n\n    if(target.name === 'name'){\n      this.setState({ name: event.target.value });\n    }\n    else if(target.name === 'secondname'){\n        this.setState({ secondname: event.target.value });\n    }\n    else if(target.name === 'pseudo'){\n        this.setState({ pseudo: event.target.value });\n    }\n    else if(target.name === 'email'){\n        this.setState({ email: event.target.value });\n    }\n    else if(target.name === 'description'){\n      this.setState({ description: event.target.value });\n    }\n\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const access_token = localStorage.getItem(\"token\");\n    const { user } = this.state;\n    const config = {\n      headers: {\n        Authorization: access_token,\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const newUser = {\n        name: this.state.name,\n        secondname: this.state.secondname,\n        pseudo:  this.state.pseudo,\n        email: this.state.email,\n        description:  this.state.description\n    };\n\n\n    API.post('user/'+user._id+'/update', newUser, config)\n    .then(result => {\n      this.props.onHide();\n      console.log(result.data);\n      const user = result.data.user;\n      this.props.au\n    })\n    .catch((error) => {\n    console.log(error);\n    })\n\n  }\n\n  render() {\n\n    return (\n      <div>\n\n        <form onSubmit={this.handleSubmit}>\n\n          <FormGroup controlId=\"formBasicText\" validationState={this.getValidationState()} >\n            <ControlLabel>First name</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={this.state.name}\n              placeholder=\"Enter name\"\n              name=\"name\"\n              onChange={this.handleChange} />\n            <FormControl.Feedback />\n          </FormGroup>\n\n          <FormGroup controlId=\"formBasicText\" validationState={this.getValidationState()} >\n            <ControlLabel>Second name</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={this.state.secondname}\n              placeholder=\"Enter second name\"\n              name=\"secondname\"\n              onChange={this.handleChange} />\n            <FormControl.Feedback />\n          </FormGroup>\n\n          <FormGroup controlId=\"formBasicText\" validationState={this.getValidationState()} >\n            <ControlLabel>Pseudo</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={this.state.pseudo}\n              placeholder=\"Enter pseudo\"\n              name=\"pseudo\"\n              onChange={this.handleChange} />\n            <FormControl.Feedback />\n          </FormGroup>\n\n          <FormGroup controlId=\"formBasicText\" validationState={this.getValidationState()} >\n            <ControlLabel>Email</ControlLabel>\n            <FormControl\n              type=\"text\"\n              value={this.state.email}\n              placeholder=\"Enter email\"\n              name=\"email\"\n              onChange={this.handleChange} />\n            <FormControl.Feedback />\n          </FormGroup>\n\n          <FormGroup controlId=\"formControlsTextarea\">\n            <ControlLabel>Description</ControlLabel>\n            <FormControl \n              componentClass=\"textarea\" \n              value={this.state.description} \n              placeholder=\"Enter description\" \n              name=\"description\" \n              onChange={this.handleChange} />\n            </FormGroup>\n\n            \n          <button className=\"submitButton btn btn-outline btn-xl js-scroll-trigger\" type=\"submit\"  >Edit profile</button>\n\n        </form>\n\n      </div>\n    )\n  }\n\n}\n\nconst ConnectedUserForm = props => (\n    <UserConsumer>\n      {({ user }) => (\n        <UserForm\n          {...props}\n          user={user}\n        />\n      )}\n    </UserConsumer>\n  )\n  export default ConnectedUserForm"]},"metadata":{},"sourceType":"module"}