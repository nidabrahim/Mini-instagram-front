{"ast":null,"code":"import _classCallCheck from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/comment.jsx\";\nimport React, { Component } from 'react';\nimport Avatar from '../assets/images/avatar.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport API from '../api';\nimport CommentForm from './commentForm';\nimport { PostConsumer } from '../providers/postProvider';\nimport ConnectedCommentForm from './commentForm';\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment() {\n    _classCallCheck(this, Comment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comment).apply(this, arguments));\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    // constructor(props) {\n    //     super(props);\n    // }\n    // state = {\n    //     post: this.props.post\n    // }\n    // state = {\n    //     body: '',\n    //     author: this.props.author\n    // }\n    // getValidationState(){\n    // }\n    // handleChange = event => {\n    //     this.setState({ body: event.target.value });\n    // }\n    // handleSubmit = event => {\n    //     event.preventDefault();\n    //     const access_token = localStorage.getItem(\"token\");\n    //     const config = {\n    //       headers: {\n    //         Authorization: access_token,\n    //         'Content-Type': 'application/json'\n    //       }\n    //     }\n    //     const comment = {\n    //         body: this.state.body,\n    //         author: this.state.author\n    //     };\n    //     API.post('post/'+this.props.post._id+'/comments/add', comment, config)\n    //       .then(res => {\n    //         console.log(res.data);\n    //       })\n    //       .catch((error) => {\n    //         console.log(error);\n    //       })\n    // }\n    value: function render() {\n      return React.createElement(PostConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, function (_ref) {\n        var post = _ref.post,\n            updateLike = _ref.updateLike;\n        return React.createElement(\"div\", {\n          className: \"comment-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"reaction\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: function onClick() {\n            return updateLike(post);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faHeart,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), \" \", post.likes, \" \"))), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), \" \", post.comments.length, \" \")))), post.comments.map(function (comment) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"profile\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"img-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            alt: \"profile\",\n            src: Avatar,\n            width: \"35px\",\n            height: \"35px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"comment-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, comment.author && comment.author.name, !comment.author && 'Anonyme'), React.createElement(\"div\", {\n            className: \"comment-content\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, comment.body))));\n        }), React.createElement(ConnectedCommentForm, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport { Comment as default };","map":{"version":3,"sources":["/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/comment.jsx"],"names":["React","Component","Avatar","FontAwesomeIcon","faHeart","faComment","API","CommentForm","PostConsumer","ConnectedCommentForm","Comment","post","updateLike","likes","comments","length","map","comment","author","name","body"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from '../assets/images/avatar.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport API from '../api';\nimport CommentForm from './commentForm';\nimport { PostConsumer } from '../providers/postProvider';\nimport ConnectedCommentForm from './commentForm';\n\n\nexport default class Comment extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    // state = {\n    //     post: this.props.post\n    // }\n\n\n    // state = {\n    //     body: '',\n    //     author: this.props.author\n    // }\n\n    // getValidationState(){\n    \n    // }\n    \n    // handleChange = event => {\n    //     this.setState({ body: event.target.value });\n    // }\n\n    // handleSubmit = event => {\n    //     event.preventDefault();\n    //     const access_token = localStorage.getItem(\"token\");\n    \n    //     const config = {\n    //       headers: {\n    //         Authorization: access_token,\n    //         'Content-Type': 'application/json'\n    //       }\n    //     }\n    \n    //     const comment = {\n    //         body: this.state.body,\n    //         author: this.state.author\n    //     };\n    \n    //     API.post('post/'+this.props.post._id+'/comments/add', comment, config)\n    //       .then(res => {\n    //         console.log(res.data);\n    //       })\n    //       .catch((error) => {\n    //         console.log(error);\n    //       })\n    // }\n\n    render() {\n        return (\n            <PostConsumer>\n            {({ post, updateLike }) => (\n            <div className=\"comment-container\">\n                <div className=\"reaction\" >\n                    <span>\n                        <a onClick={() => updateLike(post)} ><span><FontAwesomeIcon icon={faHeart} /> {post.likes} </span></a>\n                    </span>\n                    <span>\n                        <a><span><FontAwesomeIcon icon={faComment} /> {post.comments.length} </span></a>\n                    </span>\n                </div>\n                { post.comments.map(comment => \n                    <div>\n                        <div className=\"profile\">\n                            <div className=\"img-container\">\n                                <img alt=\"profile\" src={Avatar} width=\"35px\" height=\"35px\"/>\n                            </div>\n                            <div className=\"comment-item\">\n                                <span className=\"name\">\n                                    {comment.author && comment.author.name}\n                                    {!comment.author && 'Anonyme'}\n                                    {/* {comment.author.name} */}\n                                </span>\n                                <div className=\"comment-content\" >\n                                    {comment.body}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* <ConnectedCommentForm post={this.props.post} /> */}\n                <ConnectedCommentForm />\n            </div>\n            )}\n            </PostConsumer>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}