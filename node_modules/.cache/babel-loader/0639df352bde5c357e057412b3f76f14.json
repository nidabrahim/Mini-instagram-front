{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.STATE = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar STATE = exports.STATE = {\n  LOADING: 'loading',\n  DISABLED: 'disabled',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  NOTHING: ''\n};\nvar ProgressButton = (0, _createReactClass2.default)({\n  displayName: 'ProgressButton',\n  propTypes: {\n    classNamespace: _propTypes2.default.string,\n    controlled: _propTypes2.default.bool,\n    durationError: _propTypes2.default.number,\n    durationSuccess: _propTypes2.default.number,\n    form: _propTypes2.default.string,\n    onClick: _propTypes2.default.func,\n    onError: _propTypes2.default.func,\n    onSuccess: _propTypes2.default.func,\n    state: _propTypes2.default.oneOf(Object.keys(STATE).map(function (k) {\n      return STATE[k];\n    })),\n    type: _propTypes2.default.string,\n    shouldAllowClickOnLoading: _propTypes2.default.bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      classNamespace: 'pb-',\n      controlled: false,\n      durationError: 1200,\n      durationSuccess: 500,\n      onClick: function onClick() {},\n      onError: function onError() {},\n      onSuccess: function onSuccess() {},\n      shouldAllowClickOnLoading: false\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentState: this.props.state || STATE.NOTHING\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (nextProps.state === this.props.state) {\n      return;\n    }\n\n    switch (nextProps.state) {\n      case STATE.SUCCESS:\n        this.success();\n        return;\n\n      case STATE.ERROR:\n        this.error();\n        return;\n\n      case STATE.LOADING:\n        this.loading();\n        return;\n\n      case STATE.DISABLED:\n        this.disable();\n        return;\n\n      case STATE.NOTHING:\n        this.notLoading();\n        return;\n\n      default:\n        return;\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    clearTimeout(this._timeout);\n  },\n  render: function render() {\n    var _props = this.props,\n        className = _props.className,\n        classNamespace = _props.classNamespace,\n        children = _props.children,\n        type = _props.type,\n        form = _props.form,\n        durationError = _props.durationError,\n        durationSuccess = _props.durationSuccess,\n        onClick = _props.onClick,\n        onError = _props.onError,\n        onSuccess = _props.onSuccess,\n        state = _props.state,\n        shouldAllowClickOnLoading = _props.shouldAllowClickOnLoading,\n        controlled = _props.controlled,\n        containerProps = _objectWithoutProperties(_props, ['className', 'classNamespace', 'children', 'type', 'form', 'durationError', 'durationSuccess', 'onClick', 'onError', 'onSuccess', 'state', 'shouldAllowClickOnLoading', 'controlled']);\n\n    containerProps.className = classNamespace + 'container ' + this.state.currentState + ' ' + className;\n    containerProps.onClick = this.handleClick;\n    return _react2.default.createElement('div', containerProps, _react2.default.createElement('button', {\n      disabled: state === STATE.DISABLED,\n      type: type,\n      form: form,\n      className: classNamespace + 'button'\n    }, _react2.default.createElement('span', null, children), _react2.default.createElement('svg', {\n      className: classNamespace + 'progress-circle',\n      viewBox: '0 0 41 41'\n    }, _react2.default.createElement('path', {\n      d: 'M38,20.5 C38,30.1685093 30.1685093,38 20.5,38'\n    })), _react2.default.createElement('svg', {\n      className: classNamespace + 'checkmark',\n      viewBox: '0 0 70 70'\n    }, _react2.default.createElement('path', {\n      d: 'm31.5,46.5l15.3,-23.2'\n    }), _react2.default.createElement('path', {\n      d: 'm31.5,46.5l-8.5,-7.1'\n    })), _react2.default.createElement('svg', {\n      className: classNamespace + 'cross',\n      viewBox: '0 0 70 70'\n    }, _react2.default.createElement('path', {\n      d: 'm35,35l-9.3,-9.3'\n    }), _react2.default.createElement('path', {\n      d: 'm35,35l9.3,9.3'\n    }), _react2.default.createElement('path', {\n      d: 'm35,35l-9.3,9.3'\n    }), _react2.default.createElement('path', {\n      d: 'm35,35l9.3,-9.3'\n    }))));\n  },\n  handleClick: function handleClick(e) {\n    if (this.props.controlled) {\n      this.props.onClick(e);\n      return true;\n    }\n\n    if ((this.props.shouldAllowClickOnLoading || this.state.currentState !== STATE.LOADING) && this.state.currentState !== STATE.DISABLED) {\n      this.loading();\n      var ret = this.props.onClick(e);\n      this.handlePromise(ret);\n    } else {\n      e.preventDefault();\n    }\n  },\n  handlePromise: function handlePromise(promise) {\n    var _this = this;\n\n    if (promise && promise.then && promise.catch) {\n      promise.then(function () {\n        _this.success();\n      }).catch(function (err) {\n        _this.error(null, err);\n      });\n    }\n  },\n  loading: function loading() {\n    this.setState({\n      currentState: STATE.LOADING\n    });\n  },\n  notLoading: function notLoading() {\n    this.setState({\n      currentState: STATE.NOTHING\n    });\n  },\n  enable: function enable() {\n    this.setState({\n      currentState: STATE.NOTHING\n    });\n  },\n  disable: function disable() {\n    this.setState({\n      currentState: STATE.DISABLED\n    });\n  },\n  success: function success(callback, dontRemove) {\n    var _this2 = this;\n\n    this.setState({\n      currentState: STATE.SUCCESS\n    });\n    this._timeout = setTimeout(function () {\n      if (!dontRemove) {\n        _this2.setState({\n          currentState: STATE.NOTHING\n        });\n      }\n\n      callback = callback || _this2.props.onSuccess;\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }, this.props.durationSuccess);\n  },\n  error: function error(callback, err) {\n    var _this3 = this;\n\n    this.setState({\n      currentState: STATE.ERROR\n    });\n    this._timeout = setTimeout(function () {\n      _this3.setState({\n        currentState: STATE.NOTHING\n      });\n\n      callback = callback || _this3.props.onError;\n\n      if (typeof callback === 'function') {\n        callback(err);\n      }\n    }, this.props.durationError);\n  }\n});\nexports.default = ProgressButton;","map":null,"metadata":{},"sourceType":"script"}