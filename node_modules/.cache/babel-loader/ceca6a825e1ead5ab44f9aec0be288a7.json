{"ast":null,"code":"import _classCallCheck from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/myUploader.jsx\";\nimport React, { Component } from 'react';\nimport ImagesUploader from 'react-images-uploader';\nimport 'react-images-uploader/styles.css';\nimport 'react-images-uploader/font.css';\nimport API from '../api';\n\nvar MyUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyUploader, _Component);\n\n  function MyUploader(props) {\n    var _this;\n\n    _classCallCheck(this, MyUploader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyUploader).call(this, props));\n    _this.state = {\n      file: '',\n      imagePreviewUrl: ''\n    };\n    return _this;\n  }\n\n  _createClass(MyUploader, [{\n    key: \"_handleSubmit\",\n    value: function _handleSubmit(e) {\n      e.preventDefault(); // const file = {\n      //     file: this.state.file\n      // };\n\n      var fd = new FormData();\n      fd.append('photo', this.state.file, this.state.file.name); // console.log('handle uploading-', this.state.file);\n      // console.log('file :', file);\n\n      API.post('post/photo', fd).then(function (res) {\n        console.log(res.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"_handleImageChange\",\n    value: function _handleImageChange(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var reader = new FileReader();\n      var file = e.target.files[0];\n      reader.readAsDataURL(file);\n\n      reader.onload = function (e) {\n        console.log(e.target.result);\n\n        _this2.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var imagePreviewUrl = this.state.imagePreviewUrl;\n      var $imagePreview = null;\n\n      if (imagePreviewUrl) {\n        $imagePreview = React.createElement(\"img\", {\n          src: imagePreviewUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      } else {\n        $imagePreview = React.createElement(\"div\", {\n          className: \"previewText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Please select an Image for Preview\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"previewComponent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"fileInput\",\n        type: \"file\",\n        name: \"file\",\n        onChange: function onChange(e) {\n          return _this3._handleImageChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        onClick: function onClick(e) {\n          return _this3._handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Upload Image\")), React.createElement(\"div\", {\n        className: \"imgPreview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, $imagePreview));\n    } //     render() {\n    //         return (\n    //             <ImagesUploader\n    //                 url=\"http://localhost:8080/api/post/photo\"\n    //                 optimisticPreviews\n    //                 multiple={false}\n    //                 inputId=\"photo\"\n    //                 onLoadEnd={(err) => {\n    //                     if (err) {\n    //                         console.error(err);\n    //                     }\n    //                 }}\n    //                 label=\"Upload a picture\"\n    //                 />\n    //         );\n    //     }\n\n  }]);\n\n  return MyUploader;\n}(Component);\n\nexport { MyUploader as default };","map":{"version":3,"sources":["/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/myUploader.jsx"],"names":["React","Component","ImagesUploader","API","MyUploader","props","state","file","imagePreviewUrl","e","preventDefault","fd","FormData","append","name","post","then","res","console","log","data","catch","error","reader","FileReader","target","files","readAsDataURL","onload","result","setState","$imagePreview","_handleImageChange","_handleSubmit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAO,kCAAP;AACA,OAAO,gCAAP;AACA,OAAOC,GAAP,MAAgB,QAAhB;;IAEqBC,U;;;;;AAEjB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAUC,MAAAA,eAAe,EAAE;AAA3B,KAAb;AAFe;AAGhB;;;;kCAEWC,C,EAAG;AACbA,MAAAA,CAAC,CAACC,cAAF,GADa,CAGb;AACA;AACA;;AAEA,UAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,MAAAA,EAAE,CAACE,MAAH,CAAU,OAAV,EAAmB,KAAKP,KAAL,CAAWC,IAA9B,EAAoC,KAAKD,KAAL,CAAWC,IAAX,CAAgBO,IAApD,EARa,CAUb;AACA;;AAEAX,MAAAA,GAAG,CAACY,IAAJ,CAAS,YAAT,EAAuBJ,EAAvB,EACCK,IADD,CACM,UAAAC,GAAG,EAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,OAHD,EAICC,KAJD,CAIO,UAACC,KAAD,EAAW;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,OAND;AAOH;;;uCAEkBb,C,EAAG;AAAA;;AAClBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIa,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAIjB,IAAI,GAAGE,CAAC,CAACgB,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;AAEAH,MAAAA,MAAM,CAACI,aAAP,CAAqBpB,IAArB;;AAEAgB,MAAAA,MAAM,CAACK,MAAP,GAAgB,UAACnB,CAAD,EAAO;AACnBS,QAAAA,OAAO,CAACC,GAAR,CAAYV,CAAC,CAACgB,MAAF,CAASI,MAArB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACVvB,UAAAA,IAAI,EAAEA,IADI;AAEVC,UAAAA,eAAe,EAAEe,MAAM,CAACM;AAFd,SAAd;AAIH,OAND;AAOH;;;6BAEU;AAAA;;AAAA,UACFrB,eADE,GACiB,KAAKF,KADtB,CACFE,eADE;AAEP,UAAIuB,aAAa,GAAG,IAApB;;AACA,UAAIvB,eAAJ,EAAqB;AACnBuB,QAAAA,aAAa,GAAI;AAAK,UAAA,GAAG,EAAEvB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACD,OAFD,MAEO;AACLuB,QAAAA,aAAa,GAAI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAjB;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AACE,QAAA,IAAI,EAAC,MADP;AACc,QAAA,IAAI,EAAC,MADnB;AAEE,QAAA,QAAQ,EAAE,kBAACtB,CAAD;AAAA,iBAAK,MAAI,CAACuB,kBAAL,CAAwBvB,CAAxB,CAAL;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,iBAACA,CAAD;AAAA,iBAAK,MAAI,CAACwB,aAAL,CAAmBxB,CAAnB,CAAL;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CAFF,EAYE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGsB,aADH,CAZF,CADF;AAmBD,K,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EA5FwC9B,S;;SAAnBG,U","sourcesContent":["import React, { Component } from 'react';\nimport ImagesUploader from 'react-images-uploader';\nimport 'react-images-uploader/styles.css';\nimport 'react-images-uploader/font.css';\nimport API from '../api';\n \nexport default class MyUploader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {file: '',imagePreviewUrl: ''};\n      }\n    \n    _handleSubmit(e) {\n        e.preventDefault();\n\n        // const file = {\n        //     file: this.state.file\n        // };\n\n        const fd = new FormData();\n        fd.append('photo', this.state.file, this.state.file.name);\n\n        // console.log('handle uploading-', this.state.file);\n        // console.log('file :', file);\n\n        API.post('post/photo', fd)\n        .then(res => {\n            console.log(res.data);\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n    \n    _handleImageChange(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.readAsDataURL(file)\n\n        reader.onload = (e) => {\n            console.log(e.target.result);\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        }\n    }\n    \n      render() {\n        let {imagePreviewUrl} = this.state;\n        let $imagePreview = null;\n        if (imagePreviewUrl) {\n          $imagePreview = (<img src={imagePreviewUrl} />);\n        } else {\n          $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n        }\n    \n        return (\n          <div className=\"previewComponent\">\n\n            <div>\n              <input className=\"fileInput\" \n                type=\"file\" name=\"file\"\n                onChange={(e)=>this._handleImageChange(e)} />\n\n              <button className=\"submitButton\" \n                type=\"submit\" \n                onClick={(e)=>this._handleSubmit(e)} >Upload Image</button>\n            </div>\n\n            <div className=\"imgPreview\">\n              {$imagePreview}\n            </div>\n\n          </div>\n        )\n      }\n\n\n//     render() {\n//         return (\n//             <ImagesUploader\n//                 url=\"http://localhost:8080/api/post/photo\"\n//                 optimisticPreviews\n//                 multiple={false}\n//                 inputId=\"photo\"\n//                 onLoadEnd={(err) => {\n//                     if (err) {\n//                         console.error(err);\n//                     }\n//                 }}\n//                 label=\"Upload a picture\"\n//                 />\n//         );\n//     }\n }"]},"metadata":{},"sourceType":"module"}