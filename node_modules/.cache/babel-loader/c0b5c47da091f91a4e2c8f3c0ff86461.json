{"ast":null,"code":"import _classCallCheck from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/commentForm.jsx\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormGroup, FormControl } from 'react-bootstrap';\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport { UserConsumer } from './../providers/userProvider';\nimport { PostContext } from '../providers/postProvider';\nimport './style.css';\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      comment: {\n        body: '',\n        author: _this.props.author\n      }\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        comment: {\n          body: event.target.value,\n          author: _this.props.author\n        }\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.context.addComment(_this.state.comment);\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.state.comment);\n    }\n  }, {\n    key: \"getValidationState\",\n    value: function getValidationState() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.author.name), React.createElement(\"div\", {\n        className: \"comment-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        className: \"comment-form\",\n        validationState: this.getValidationState(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.value,\n        placeholder: \"Enter title\",\n        name: \"title\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"insta-btn\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nCommentForm.contextType = PostContext;\n\nvar ConnectedCommentForm = function ConnectedCommentForm(props) {\n  return React.createElement(UserConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, function (_ref) {\n    var user = _ref.user;\n    return React.createElement(CommentForm, Object.assign({}, props, {\n      author: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default ConnectedCommentForm;","map":{"version":3,"sources":["/home/youssef/ISIMA/projects/ReactJS/InstaFront/src/components/commentForm.jsx"],"names":["React","Component","FontAwesomeIcon","FormGroup","FormControl","faComment","UserConsumer","PostContext","CommentForm","props","state","comment","body","author","handleChange","event","setState","target","value","handleSubmit","preventDefault","context","addComment","console","log","name","getValidationState","contextType","ConnectedCommentForm","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { FormGroup, FormControl } from 'react-bootstrap';\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\nimport { UserConsumer } from './../providers/userProvider'\nimport { PostContext } from '../providers/postProvider';\nimport './style.css'\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        comment: {\n            body: '',\n            author: this.props.author\n        }\n    }\n\n    componentDidMount() {\n       console.log(this.state.comment);\n      }\n\n    getValidationState(){}\n    \n    handleChange = event => {\n        this.setState({comment : { body: event.target.value, author: this.props.author }});\n    }\n\n     handleSubmit = event => {\n         event.preventDefault();\n         this.context.addComment(this.state.comment);\n     }\n\n    render() {\n        return (\n                <div>\n                    <div className=\"profile\">\n                        <div className=\"comment-item\">\n                            <span className=\"name\">\n                                {this.props.author.name}\n                            </span>\n                            <div className=\"comment-content\" >\n                                <form onSubmit={this.handleSubmit}>\n                                    <FormGroup controlId=\"formBasicText\" className=\"comment-form\" validationState={this.getValidationState()} >\n                                        <FormControl\n                                        type=\"text\"\n                                        value={this.state.value}\n                                        placeholder=\"Enter title\"\n                                        name=\"title\"\n                                        onChange={this.handleChange} />\n                                        <FormControl.Feedback />\n                                    </FormGroup>\n                                    <button className=\"insta-btn\" type=\"submit\"><FontAwesomeIcon icon={faComment} /></button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\nCommentForm.contextType = PostContext;\n\n\nconst ConnectedCommentForm = props => (\n    <UserConsumer>\n      {({ user }) => (\n        <CommentForm\n          {...props}\n          author={user}\n        />\n      )}\n    </UserConsumer>\n)\n  \nexport default ConnectedCommentForm"]},"metadata":{},"sourceType":"module"}