{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isImageLoaded_1 = require(\"./isImageLoaded\");\n\nvar noOp_1 = require(\"./noOp\");\n/**\n * Creates a DOM image object and set its onload and onerror properties.\n * If the image was already cached, onload is set immediatly.\n * @param  src     the source of the image, You may leave it blank if you want to set it later\n * @param  onLoad  callback to call when the image loads (or has loaded). Receives the image object as a parameter\n * @param  onError callback to call when the image has an error. Receives the image object as a parameter.\n *                 Optional, but note that `onload` will never be called if an error occurs\n * @return         the image object\n */\n\n\nexports.createHTMLImageElement = function (src, onLoad, onError) {\n  var img = new Image();\n  var called = false;\n  img.alt = '';\n\n  var callback = function callback() {\n    if (!called) {\n      called = true;\n      img.onload = noOp_1.noOp;\n      img.onerror = noOp_1.noOp;\n      return true;\n    }\n\n    ;\n    return false;\n  };\n\n  var onLoadWrapped = function onLoadWrapped() {\n    return callback() && onLoad && onLoad(img);\n  };\n\n  var onErrorWrapped = function onErrorWrapped(err) {\n    return callback() && onError && onError(img, err);\n  };\n\n  img.onload = onLoadWrapped;\n  img.onerror = onErrorWrapped;\n\n  if (src) {\n    img.src = src;\n  }\n\n  ;\n\n  if (isImageLoaded_1.isImageLoaded(img)) {\n    setTimeout(onLoadWrapped);\n  }\n\n  ;\n  return img;\n};\n\nexports.default = exports.createHTMLImageElement;","map":null,"metadata":{},"sourceType":"script"}